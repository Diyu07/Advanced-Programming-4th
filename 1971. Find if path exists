from collections import defaultdict
from typing import List

class Solution:
    def validPath(self, n: int, edges: List[List[int]], source: int, destination: int) -> bool:
        D = defaultdict(list)
        for u, v in edges:
            D[u].append(v)
            D[v].append(u)
            
        visited = set()
        def dfs(node):
            if node == destination:  
                return True

            visited.add(node)

            for nei_node in D[node]:
                if nei_node not in visited:
                    if dfs(nei_node):
                        return True
            
            return False
        
        return dfs(source)
