#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        sort(nums.begin(), nums.end());

        for (int i = 0; i < nums.size(); i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;  
            }

            int target = -nums[i];
            unordered_map<int, int> seen;

            for (int j = i + 1; j < nums.size(); j++) {
                int second = target - nums[j];

                if (seen.find(second) != seen.end()) {
                    result.push_back({nums[i], nums[j], second});

                    while (j + 1 < nums.size() && nums[j] == nums[j + 1]) {
                        j++;
                    }
                }

                seen[nums[j]] = j;
            }
        }

        return result;
    }
};
